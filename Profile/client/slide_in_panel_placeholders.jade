template(name="Slide_In_Panel_Placeholder_Title")
	h1.cd Stationless Bikeshare

template(name="Slide_In_Panel_Placeholder")
	p.cd As part of a four-year honors research program, Gemstone, I've been working with 13 other undergraduate students on building a university bikeshare. My primary role has been the full stack web development of our website, but I have contributed to other facets of the team including sensor selection and the smart-lock design.
	img(src="images/IMG_0792.jpg").cd
	p.cd
		strong Challenges:
		|  Over the past two years, I had to rapidly teach myself how to build a website. I had some prior experience in MatLab and C, but had never tried to build a website before. I likewise had to narrow down and select a website framework, learn a back-end db structure, learn git, and pickup some website design skills.
	p.cd All of this hard work has paid off in the progress I've made towards building
		a(href="https://redbarbikes.com") redbarbikes.com
		| . The website includes several functions including login roles, real time maps, an admin panel with charts and tables, and many more. I've learned how to use Meteor-Up and host the website behind an SSL certificate on one Digital Ocean's servers.
	img(src="images/Web Clock UX - Chrome Web Store Google Chrome, Today at 7.18.37 PM.png").cd
	p.cd One of the most interesting components of this website was the challenge of integrating a communication network with real time updates to the website's database. I solved this by building a minimalistic Node.JS application that communicates over Meteor's default Distributed Document Protocol (DDP). The Node application is run on an equally minimalist raspberry pi, which collects information over serial directly from a XBee module (our communications network). Through this process we can allow for two way communication and allow for a high throughput of information from our end-IOT devices.